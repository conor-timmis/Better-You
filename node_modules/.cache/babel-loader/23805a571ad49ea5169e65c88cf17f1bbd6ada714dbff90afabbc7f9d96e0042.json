{"ast":null,"code":"var _jsxFileName = \"/workspace/Better-You/src/contexts/CurrentUserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CurrentUserContext = /*#__PURE__*/createContext();\nexport const SetCurrentUserContext = /*#__PURE__*/createContext();\nexport const useCurrentUser = () => {\n  _s();\n  return useContext(CurrentUserContext);\n};\n_s(useCurrentUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useSetCurrentUser = () => {\n  _s2();\n  return useContext(SetCurrentUserContext);\n};\n_s2(useSetCurrentUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CurrentUserProvider = ({\n  children\n}) => {\n  _s3();\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory();\n  const handleMount = async () => {\n    try {\n      const {\n        data\n      } = await axiosRes.get(\"dj-rest-auth/user/\");\n      setCurrentUser(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    handleMount();\n  }, []);\n  useMemo(() => {\n    axiosReq.interceptors.request.use(async config => {\n      try {\n        await axios.post(\"/dj-rest-auth/token/refresh/\");\n      } catch (err) {\n        setCurrentUser(prevCurrentUser => {\n          if (prevCurrentUser) {\n            history.push(\"/signin\");\n          }\n          return null;\n        });\n        return config;\n      }\n      return config;\n    }, err => {\n      return Promise.reject(err);\n    });\n    axiosRes.interceptors.response.use(response => response, async err => {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        try {\n          await axios.post(\"/dj-rest-auth/token/refresh/\");\n        } catch (err) {\n          setCurrentUser(prevCurrentUser => {\n            if (prevCurrentUser) {\n              history.push(\"/signin\");\n            }\n            return null;\n          });\n        }\n        return axios(err.config);\n      }\n      return Promise.reject(err);\n    });\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(SetCurrentUserContext.Provider, {\n      value: setCurrentUser,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s3(CurrentUserProvider, \"obq8OtWQOEoS0I/7uE2pGdhcHLQ=\", false, function () {\n  return [useHistory];\n});\n_c = CurrentUserProvider;\nvar _c;\n$RefreshReg$(_c, \"CurrentUserProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useState","axios","axiosReq","axiosRes","useHistory","jsxDEV","_jsxDEV","CurrentUserContext","SetCurrentUserContext","useCurrentUser","_s","useSetCurrentUser","_s2","CurrentUserProvider","children","_s3","currentUser","setCurrentUser","history","handleMount","data","get","err","console","log","interceptors","request","use","config","post","prevCurrentUser","push","Promise","reject","response","_err$response","status","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/Better-You/src/contexts/CurrentUserContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router\";\n\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory();\n\n  const handleMount = async () => {\n    try {\n      const { data } = await axiosRes.get(\"dj-rest-auth/user/\");\n      setCurrentUser(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  useMemo(() => {\n    axiosReq.interceptors.request.use(\n      async (config) => {\n        try {\n          await axios.post(\"/dj-rest-auth/token/refresh/\");\n        } catch (err) {\n          setCurrentUser((prevCurrentUser) => {\n            if (prevCurrentUser) {\n              history.push(\"/signin\");\n            }\n            return null;\n          });\n          return config;\n        }\n        return config;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n\n    axiosRes.interceptors.response.use(\n      (response) => response,\n      async (err) => {\n        if (err.response?.status === 401) {\n          try {\n            await axios.post(\"/dj-rest-auth/token/refresh/\");\n          } catch (err) {\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                history.push(\"/signin\");\n              }\n              return null;\n            });\n          }\n          return axios(err.config);\n        }\n        return Promise.reject(err);\n      }\n    );\n  }, [history]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}